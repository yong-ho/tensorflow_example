C:\Users\jyh\AppData\Local\Programs\Python\Python35\python.exe C:/Users/jyh/PycharmProjects/untitled1/boston.py
INFO:tensorflow:Using default config.
INFO:tensorflow:Using config: {'_evaluation_master': '', '_environment': 'local', '_save_checkpoints_secs': 600, '_keep_checkpoint_max': 5, '_is_chief': True, '_master': '', '_tf_config': gpu_options {
  per_process_gpu_memory_fraction: 1
}
, '_tf_random_seed': None, '_task_id': 0, '_save_summary_steps': 100, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x00000215D47874A8>, '_model_dir': None, '_num_ps_replicas': 0, '_num_worker_replicas': 0, '_task_type': None, '_keep_checkpoint_every_n_hours': 10000, '_save_checkpoints_steps': None}
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:From C:\Users\jyh\AppData\Local\Programs\Python\Python35\lib\site-packages\tensorflow\contrib\learn\python\learn\estimators\head.py:615: scalar_summary (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2016-11-30.
Instructions for updating:
Please switch to tf.summary.scalar. Note that tf.summary.scalar uses the node name instead of the tag. This means that TensorFlow will automatically de-duplicate summary names based on the scope they are created in. Also, passing a tensor or list of tags to a scalar summary op is no longer supported.
INFO:tensorflow:Create CheckpointSaverHook.
2017-06-15 10:33:32.887348: W c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\platform\cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE instructions, but these are available on your machine and could speed up CPU computations.
2017-06-15 10:33:32.887692: W c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\platform\cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE2 instructions, but these are available on your machine and could speed up CPU computations.
2017-06-15 10:33:32.888041: W c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\platform\cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE3 instructions, but these are available on your machine and could speed up CPU computations.
2017-06-15 10:33:32.888323: W c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\platform\cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.
2017-06-15 10:33:32.888648: W c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\platform\cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.
2017-06-15 10:33:32.889085: W c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\platform\cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.
2017-06-15 10:33:32.889335: W c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\platform\cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.
2017-06-15 10:33:32.889585: W c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\platform\cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.
INFO:tensorflow:Saving checkpoints for 1 into /tmp/boston_model\model.ckpt.
INFO:tensorflow:loss = 17096.3, step = 1
INFO:tensorflow:global_step/sec: 1667.16
INFO:tensorflow:loss = 103.903, step = 101 (0.060 sec)
INFO:tensorflow:global_step/sec: 1754.4
INFO:tensorflow:loss = 84.2609, step = 201 (0.056 sec)
INFO:tensorflow:global_step/sec: 1960.83
INFO:tensorflow:loss = 79.5946, step = 301 (0.052 sec)
INFO:tensorflow:global_step/sec: 1960.78
INFO:tensorflow:loss = 73.1935, step = 401 (0.050 sec)
INFO:tensorflow:global_step/sec: 1886.78
INFO:tensorflow:loss = 71.1576, step = 501 (0.054 sec)
INFO:tensorflow:global_step/sec: 1818.2
INFO:tensorflow:loss = 68.8591, step = 601 (0.055 sec)
INFO:tensorflow:global_step/sec: 1960.79
INFO:tensorflow:loss = 67.1146, step = 701 (0.051 sec)
INFO:tensorflow:global_step/sec: 1886.78
INFO:tensorflow:loss = 65.3178, step = 801 (0.053 sec)
INFO:tensorflow:global_step/sec: 1886.73
INFO:tensorflow:loss = 64.4031, step = 901 (0.052 sec)
INFO:tensorflow:global_step/sec: 1851.88
INFO:tensorflow:loss = 62.8356, step = 1001 (0.054 sec)
INFO:tensorflow:global_step/sec: 1818.16
INFO:tensorflow:loss = 61.5589, step = 1101 (0.056 sec)
INFO:tensorflow:global_step/sec: 1960.83
INFO:tensorflow:loss = 59.9215, step = 1201 (0.051 sec)
INFO:tensorflow:global_step/sec: 1886.83
INFO:tensorflow:loss = 58.7612, step = 1301 (0.052 sec)
INFO:tensorflow:global_step/sec: 1960.72
INFO:tensorflow:loss = 57.8955, step = 1401 (0.052 sec)
INFO:tensorflow:global_step/sec: 2040.89
INFO:tensorflow:loss = 56.2611, step = 1501 (0.049 sec)
INFO:tensorflow:global_step/sec: 2040.75
INFO:tensorflow:loss = 54.0291, step = 1601 (0.049 sec)
INFO:tensorflow:global_step/sec: 1724.21
INFO:tensorflow:loss = 53.3991, step = 1701 (0.058 sec)
INFO:tensorflow:global_step/sec: 1923.01
INFO:tensorflow:loss = 53.7878, step = 1801 (0.052 sec)
INFO:tensorflow:global_step/sec: 1818.19
INFO:tensorflow:loss = 50.3366, step = 1901 (0.054 sec)
INFO:tensorflow:global_step/sec: 2083.33
INFO:tensorflow:loss = 50.1801, step = 2001 (0.049 sec)
INFO:tensorflow:global_step/sec: 1923.08
INFO:tensorflow:loss = 50.2896, step = 2101 (0.052 sec)
INFO:tensorflow:global_step/sec: 1724.14
INFO:tensorflow:loss = 46.9606, step = 2201 (0.058 sec)
INFO:tensorflow:global_step/sec: 1960.81
INFO:tensorflow:loss = 46.0858, step = 2301 (0.050 sec)
INFO:tensorflow:global_step/sec: 1960.8
INFO:tensorflow:loss = 47.1394, step = 2401 (0.051 sec)
INFO:tensorflow:global_step/sec: 1960.75
INFO:tensorflow:loss = 44.6327, step = 2501 (0.052 sec)
INFO:tensorflow:global_step/sec: 1754.36
INFO:tensorflow:loss = 43.3406, step = 2601 (0.056 sec)
INFO:tensorflow:global_step/sec: 1851.88
INFO:tensorflow:loss = 42.8633, step = 2701 (0.055 sec)
INFO:tensorflow:global_step/sec: 1999.96
INFO:tensorflow:loss = 42.7349, step = 2801 (0.050 sec)
INFO:tensorflow:global_step/sec: 1923.11
INFO:tensorflow:loss = 41.6298, step = 2901 (0.051 sec)
INFO:tensorflow:global_step/sec: 1785.72
INFO:tensorflow:loss = 40.9693, step = 3001 (0.057 sec)
INFO:tensorflow:global_step/sec: 1886.72
INFO:tensorflow:loss = 40.5198, step = 3101 (0.053 sec)
INFO:tensorflow:global_step/sec: 1960.88
INFO:tensorflow:loss = 39.789, step = 3201 (0.051 sec)
INFO:tensorflow:global_step/sec: 1885.96
INFO:tensorflow:loss = 39.3319, step = 3301 (0.052 sec)
INFO:tensorflow:global_step/sec: 1818.91
INFO:tensorflow:loss = 38.9185, step = 3401 (0.056 sec)
INFO:tensorflow:global_step/sec: 1851.89
INFO:tensorflow:loss = 38.2897, step = 3501 (0.054 sec)
INFO:tensorflow:global_step/sec: 1999.97
INFO:tensorflow:loss = 38.1124, step = 3601 (0.050 sec)
INFO:tensorflow:global_step/sec: 1999.9
INFO:tensorflow:loss = 37.5199, step = 3701 (0.050 sec)
INFO:tensorflow:global_step/sec: 1666.75
INFO:tensorflow:loss = 37.3323, step = 3801 (0.060 sec)
INFO:tensorflow:global_step/sec: 1886.79
INFO:tensorflow:loss = 36.9672, step = 3901 (0.052 sec)
INFO:tensorflow:global_step/sec: 1694.87
INFO:tensorflow:loss = 36.6256, step = 4001 (0.060 sec)
INFO:tensorflow:global_step/sec: 1754.38
INFO:tensorflow:loss = 36.346, step = 4101 (0.057 sec)
INFO:tensorflow:global_step/sec: 1960.82
INFO:tensorflow:loss = 35.9256, step = 4201 (0.051 sec)
INFO:tensorflow:global_step/sec: 2000.03
INFO:tensorflow:loss = 35.8178, step = 4301 (0.050 sec)
INFO:tensorflow:global_step/sec: 2040.82
INFO:tensorflow:loss = 35.6075, step = 4401 (0.049 sec)
INFO:tensorflow:global_step/sec: 1923.01
INFO:tensorflow:loss = 35.3981, step = 4501 (0.051 sec)
INFO:tensorflow:global_step/sec: 1818.23
INFO:tensorflow:loss = 35.4229, step = 4601 (0.056 sec)
INFO:tensorflow:global_step/sec: 1851.83
INFO:tensorflow:loss = 34.9405, step = 4701 (0.053 sec)
INFO:tensorflow:global_step/sec: 2040.82
INFO:tensorflow:loss = 34.8927, step = 4801 (0.050 sec)
INFO:tensorflow:global_step/sec: 2000.04
INFO:tensorflow:loss = 34.7853, step = 4901 (0.050 sec)
INFO:tensorflow:Saving checkpoints for 5000 into /tmp/boston_model\model.ckpt.
INFO:tensorflow:Loss for final step: 34.61.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:From C:\Users\jyh\AppData\Local\Programs\Python\Python35\lib\site-packages\tensorflow\contrib\learn\python\learn\estimators\head.py:615: scalar_summary (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2016-11-30.
Instructions for updating:
Please switch to tf.summary.scalar. Note that tf.summary.scalar uses the node name instead of the tag. This means that TensorFlow will automatically de-duplicate summary names based on the scope they are created in. Also, passing a tensor or list of tags to a scalar summary op is no longer supported.
INFO:tensorflow:Starting evaluation at 2017-06-15-01:33:37
INFO:tensorflow:Restoring parameters from /tmp/boston_model\model.ckpt-5000
INFO:tensorflow:Evaluation [1/1]
INFO:tensorflow:Finished evaluation at 2017-06-15-01:33:37
INFO:tensorflow:Saving dict for global step 5000: global_step = 5000, loss = 20.5523
WARNING:tensorflow:Skipping summary for global_step, must be a float or np.float32.
Loss: 20.552340
WARNING:tensorflow:From C:\Users\jyh\AppData\Local\Programs\Python\Python35\lib\site-packages\tensorflow\python\util\deprecation.py:335: calling DNNRegressor.predict (from tensorflow.contrib.learn.python.learn.estimators.dnn) with outputs=None is deprecated and will be removed after 2017-03-01.
Instructions for updating:
Please switch to predict_scores, or set `outputs` argument.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
WARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you resize your input, as this behavior may change.
INFO:tensorflow:Restoring parameters from /tmp/boston_model\model.ckpt-5000
Predictions: [34.160084, 20.541857, 23.548262, 34.567062, 14.336411, 20.645601]

Process finished with exit code 0